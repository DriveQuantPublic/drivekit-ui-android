plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
}

android {
    namespace 'com.drivekit.drivekitdemoapp'
    compileSdk project.ext.compile_sdk_version

    defaultConfig {
        applicationId "com.example.drivekitdemoapp"
        minSdkVersion project.ext.min_sdk_version
        targetSdkVersion project.ext.target_sdk_version
        versionCode 1
        versionName "$drivekitui_version"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "version"

    productFlavors {
        create("demo") {
            dimension = "version"
            isDefault = true
        }
        create("fontsTest") {
            dimension = "version"
            applicationIdSuffix = ".test"
        }
        create("colorsTest") {
            dimension = "version"
            applicationIdSuffix = ".test"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    signingConfigs {
        debug {
            storeFile file("./debug.keystore")
        }
    }

    lint {
        checkDependencies true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation libs.mpandroidchart
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.work.runtime.ktx

    implementation "com.drivequant.drivekit:drivekit-trip-analysis:$drivekit_version"
    implementation "com.drivequant.drivekit:drivekit-driver-data:$drivekit_version"
    implementation "com.drivequant.drivekit:drivekit-vehicle:$drivekit_version"
    implementation "com.drivequant.drivekit:drivekit-driver-achievement:$drivekit_version"
    implementation "com.drivequant.drivekit:drivekit-challenge:$drivekit_version"
    debugImplementation "com.drivequant.drivekit:drivekit-trip-simulator:$drivekit_version"
    releaseImplementation "com.drivequant.drivekit:drivekit-trip-simulator-noop:$drivekit_version" // You can use the no-op module when building in release mode


    // In this project we can locally build DriveKit UI modules:
    implementation project(':CommonUI')
    implementation project(':TripAnalysisUI')
    implementation project(':DriverDataUI')
    implementation project(':DriverDataTimelineUI')
    implementation project(':VehicleUI')
    implementation project(':DriverAchievementUI')
    implementation project(':PermissionsUtilsUI')
    implementation project(':ChallengeUI')

    // In your app, you must implement DriveKit UI modules like that:
    //implementation "com.drivequant.drivekit:drivekit-common-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-trip-analysis-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-driver-data-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-driver-data-timeline-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-vehicle-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-driver-achievement-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-permissions-utils-ui:$drivekitui_version"
    //implementation "com.drivequant.drivekit:drivekit-challenge-ui:$drivekitui_version"
}
